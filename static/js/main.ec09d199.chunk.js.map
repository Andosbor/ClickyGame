{"version":3,"sources":["components/Header.js","components/ClickBox.js","components/Navbar.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","ClickBox","props","alt","name","src","image","Navbar","class","shuffle","array","sort","Math","random","randomized","characters","console","log","App","components_Navbar","components_Header","components_ClickBox","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ec09d199.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Header.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n           Garfield Clicky Game!\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"../styles/ClickBox.css\";\r\n\r\nfunction ClickBox(props) {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"img-container\">\r\n          <img alt={props.name} src={props.image} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ClickBox;","import React from \"react\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav class=\"navbar row\">\r\n            <span class=\"col-2 navbar-brand mb-0 h1\">Garfield Clicky Game!</span>\r\n            <span class=\"col-2 navbar-brand mb-0 h1\">Click an image to begin!</span>\r\n            <span class=\"col-2 navbar-brand mb-0 h1\">Score: 0 | Top Score: 0</span>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport './styles/App.css';\nimport Header from \"./components/Header\";\nimport ClickBox from \"./components/ClickBox\";\nimport Navbar from \"./components/Navbar\";\nimport characters from \"./characters.json\";\n \n\n//on click, if isClicked is false then add 1 to score and shuffle\n          //if isClicked is true, reset Game\n\nfunction shuffle(array) {\n  var shuffled = array.sort(() => Math.random() - 0.5);\n  return shuffled;\n}\n\n\nfunction updateIsClicked() {\n  // Note: this will *not* work as intended.\n  //this.setState({isClicked: true});\n  if(2===2){\n    console.log(this.props.name)\n  }\n}\n\n/*\nresetIsClicked(index) {\n  for() {\n  this.setState({this.state.randomized[index].isClicked: true})\n  }\n}\n\nhandleSomething() {\n  // Let's say `this.state.count` starts at 0.\n  this.incrementCount();\n  this.incrementCount();\n  this.incrementCount();\n  // When React re-renders the component, `this.state.count` will be 1, but you expected 3.\n\n  // This is because `incrementCount()` function above reads from `this.state.count`,\n  // but React doesn't update `this.state.count` until the component is re-rendered.\n  // So `incrementCount()` ends up reading `this.state.count` as 0 every time, and sets it to 1.\n\n  // The fix is described below!\n}\n*/\n\nvar randomized = shuffle(characters);\nconsole.log({randomized});\n\nfunction resetGame(){\n  //resetScore() (need to build this function)\n  //setTopScore() (need to build this function)\n  shuffle(characters);\n}\n\nfunction createBox(){\n{/* mapping each character into each box */}\n\n}\n\nfunction App() {\n  return (\n    <div>\n      <Navbar/>\n      <Header/>\n      <div className=\"jumbotron\">\n        <div className=\"row\">\n        {/* add a map function to insert the images into each box */}\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[0].name}\n              image={randomized[0].image}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[1].name}\n              image={randomized[1].image}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[2].name}\n              image={randomized[2].image}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[3].name}\n              image={randomized[3].image}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[4].name}\n              image={randomized[4].image}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[5].name}\n              image={randomized[5].image}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[6].name}\n              image={randomized[6].image}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[7].name}\n              image={randomized[7].image}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[8].name}\n              image={randomized[8].image}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[9].name}\n              image={randomized[9].image}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[10].name}\n              image={randomized[10].image}\n            />\n          </div>\n          <div className=\"col-3\">\n            <ClickBox \n              name={randomized[11].name}\n              image={randomized[11].image}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}